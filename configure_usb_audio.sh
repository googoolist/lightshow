#!/bin/bash
# USB Audio Configuration Script for Raspberry Pi
# Fixes USB audio devices not showing input channels

echo "=== USB Audio Configuration for Raspberry Pi ==="

# Function to get Sound Blaster card info
get_sound_blaster_info() {
    echo "Scanning for Sound Blaster..."
    arecord -l | grep -i "sound blaster\|creative\|s3" | head -1
}

# Get Sound Blaster info
SB_INFO=$(get_sound_blaster_info)
if [ -z "$SB_INFO" ]; then
    echo "❌ No Sound Blaster found in ALSA. Please check USB connection."
    echo "Available capture devices:"
    arecord -l
    exit 1
fi

echo "✓ Found Sound Blaster: $SB_INFO"

# Extract card and device numbers
CARD_NUM=$(echo "$SB_INFO" | sed -n 's/card \([0-9]*\):.*/\1/p')
DEVICE_NUM=$(echo "$SB_INFO" | sed -n 's/.*device \([0-9]*\):.*/\1/p')

echo "✓ Card: $CARD_NUM, Device: $DEVICE_NUM"

# Backup existing configurations
echo "📁 Backing up existing audio configurations..."
[ -f ~/.asoundrc ] && cp ~/.asoundrc ~/.asoundrc.backup
[ -f /etc/asound.conf ] && sudo cp /etc/asound.conf /etc/asound.conf.backup

# Create user-level ALSA configuration
echo "📝 Creating ~/.asoundrc configuration..."
cat > ~/.asoundrc << EOF
# ALSA configuration for Sound Blaster USB Audio
# Generated by lightshow configure_usb_audio.sh

# Default PCM device
pcm.!default {
    type asym
    capture.pcm "mic"
    playback.pcm "speaker"
}

# Control interface
ctl.!default {
    type hw
    card $CARD_NUM
}

# Microphone input configuration
pcm.mic {
    type plug
    slave {
        pcm "hw:$CARD_NUM,$DEVICE_NUM"
        channels 2
        rate 44100
        format S16_LE
    }
}

# Speaker output configuration  
pcm.speaker {
    type plug
    slave {
        pcm "hw:$CARD_NUM,$DEVICE_NUM"
        channels 2
        rate 44100
        format S16_LE
    }
}

# Direct hardware access aliases
pcm.soundblaster {
    type hw
    card $CARD_NUM
    device $DEVICE_NUM
}

pcm.soundblaster_plug {
    type plug
    slave.pcm "soundblaster"
}
EOF

echo "✓ Created ~/.asoundrc"

# Create system-level configuration
echo "📝 Creating /etc/asound.conf configuration..."
sudo tee /etc/asound.conf > /dev/null << EOF
# System-wide ALSA configuration for USB Audio
defaults.pcm.card $CARD_NUM
defaults.pcm.device $DEVICE_NUM
defaults.ctl.card $CARD_NUM
EOF

echo "✓ Created /etc/asound.conf"

# Test ALSA configuration
echo "🧪 Testing ALSA configuration..."

echo "Testing capture capabilities..."
if arecord --device=hw:$CARD_NUM,$DEVICE_NUM --dump-hw-params 2>/dev/null | head -10; then
    echo "✓ ALSA can access capture device"
else
    echo "❌ ALSA cannot access capture device"
fi

echo "Testing quick recording..."
if timeout 2 arecord --device=hw:$CARD_NUM,$DEVICE_NUM --format S16_LE --rate 44100 -c 2 --duration=1 /tmp/test_audio.wav 2>/dev/null; then
    echo "✓ Recording test successful"
    rm -f /tmp/test_audio.wav
else
    echo "⚠ Recording test failed, trying mono..."
    if timeout 2 arecord --device=hw:$CARD_NUM,$DEVICE_NUM --format S16_LE --rate 44100 -c 1 --duration=1 /tmp/test_audio.wav 2>/dev/null; then
        echo "✓ Mono recording successful"
        rm -f /tmp/test_audio.wav
    else
        echo "❌ Both stereo and mono recording failed"
    fi
fi

# Restart audio services
echo "🔄 Restarting audio services..."
sudo systemctl restart alsa-state
sleep 2

# Update lightshow config
echo "📝 Updating lightshow configuration..."
if [ -f "config.yaml" ]; then
    # Update config.yaml to use the detected card number
    sed -i "s/device_name: .*/device_name: $CARD_NUM  # Sound Blaster card $CARD_NUM detected/" config.yaml
    echo "✓ Updated config.yaml with card $CARD_NUM"
else
    echo "⚠ config.yaml not found in current directory"
fi

echo ""
echo "=== Configuration Complete ==="
echo "Sound Blaster configured as:"
echo "  ALSA Device: hw:$CARD_NUM,$DEVICE_NUM" 
echo "  Lightshow device_name: $CARD_NUM"
echo ""
echo "🔄 Please restart your lightshow application"
echo "📊 You can test with: arecord --device=hw:$CARD_NUM,$DEVICE_NUM --format S16_LE --rate 44100 -c 2 test.wav"
